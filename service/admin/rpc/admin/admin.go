// Code generated by goctl. DO NOT EDIT!
// Source: admin.proto

package admin

import (
	"context"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Admin interface {
		AdminLogin(ctx context.Context, in *AdminLoginRequest, opts ...grpc.CallOption) (*AdminLoginResponse, error)
		GetAdminProfile(ctx context.Context, in *GetAdminProfileRequest, opts ...grpc.CallOption) (*GetAdminProfileResponse, error)
		UpdateAdminName(ctx context.Context, in *UpdateAdminNameRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
		UpdateAdminPwd(ctx context.Context, in *UpdateAdminPwdRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
		GetUserList(ctx context.Context, in *GetUserListRequest, opts ...grpc.CallOption) (*GetUserListResponse, error)
		LockUser(ctx context.Context, in *LockUserRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
		AdminLogout(ctx context.Context, in *AdminLogoutRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	}

	defaultAdmin struct {
		cli zrpc.Client
	}
)

func NewAdmin(cli zrpc.Client) Admin {
	return &defaultAdmin{
		cli: cli,
	}
}

func (m *defaultAdmin) AdminLogin(ctx context.Context, in *AdminLoginRequest, opts ...grpc.CallOption) (*AdminLoginResponse, error) {
	client := NewAdminClient(m.cli.Conn())
	return client.AdminLogin(ctx, in, opts...)
}

func (m *defaultAdmin) GetAdminProfile(ctx context.Context, in *GetAdminProfileRequest, opts ...grpc.CallOption) (*GetAdminProfileResponse, error) {
	client := NewAdminClient(m.cli.Conn())
	return client.GetAdminProfile(ctx, in, opts...)
}

func (m *defaultAdmin) UpdateAdminName(ctx context.Context, in *UpdateAdminNameRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	client := NewAdminClient(m.cli.Conn())
	return client.UpdateAdminName(ctx, in, opts...)
}

func (m *defaultAdmin) UpdateAdminPwd(ctx context.Context, in *UpdateAdminPwdRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	client := NewAdminClient(m.cli.Conn())
	return client.UpdateAdminPwd(ctx, in, opts...)
}

func (m *defaultAdmin) GetUserList(ctx context.Context, in *GetUserListRequest, opts ...grpc.CallOption) (*GetUserListResponse, error) {
	client := NewAdminClient(m.cli.Conn())
	return client.GetUserList(ctx, in, opts...)
}

func (m *defaultAdmin) LockUser(ctx context.Context, in *LockUserRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	client := NewAdminClient(m.cli.Conn())
	return client.LockUser(ctx, in, opts...)
}

func (m *defaultAdmin) AdminLogout(ctx context.Context, in *AdminLogoutRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	client := NewAdminClient(m.cli.Conn())
	return client.AdminLogout(ctx, in, opts...)
}
