// Code generated by goctl. DO NOT EDIT!
// Source: goodscategory.proto

package goodscategory

import (
	"context"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Goodscategory interface {
		AddCategory(ctx context.Context, in *AddCategoryRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
		UpdateCategory(ctx context.Context, in *UpdateCategoryRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
		GetCategory(ctx context.Context, in *GetCategoryRequest, opts ...grpc.CallOption) (*GetCategoryResponse, error)
		GetCategoryList(ctx context.Context, in *GetCategoryListRequest, opts ...grpc.CallOption) (*GetCategoryListResponse, error)
		GetCategoryByParent(ctx context.Context, in *GetCategoryByParentRequest, opts ...grpc.CallOption) (*GetCategoryByParentResponse, error)
		DeleteCategory(ctx context.Context, in *DeleteCategoryRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	}

	defaultGoodscategory struct {
		cli zrpc.Client
	}
)

func NewGoodscategory(cli zrpc.Client) Goodscategory {
	return &defaultGoodscategory{
		cli: cli,
	}
}

func (m *defaultGoodscategory) AddCategory(ctx context.Context, in *AddCategoryRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	client := NewGoodscategoryClient(m.cli.Conn())
	return client.AddCategory(ctx, in, opts...)
}

func (m *defaultGoodscategory) UpdateCategory(ctx context.Context, in *UpdateCategoryRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	client := NewGoodscategoryClient(m.cli.Conn())
	return client.UpdateCategory(ctx, in, opts...)
}

func (m *defaultGoodscategory) GetCategory(ctx context.Context, in *GetCategoryRequest, opts ...grpc.CallOption) (*GetCategoryResponse, error) {
	client := NewGoodscategoryClient(m.cli.Conn())
	return client.GetCategory(ctx, in, opts...)
}

func (m *defaultGoodscategory) GetCategoryList(ctx context.Context, in *GetCategoryListRequest, opts ...grpc.CallOption) (*GetCategoryListResponse, error) {
	client := NewGoodscategoryClient(m.cli.Conn())
	return client.GetCategoryList(ctx, in, opts...)
}

func (m *defaultGoodscategory) GetCategoryByParent(ctx context.Context, in *GetCategoryByParentRequest, opts ...grpc.CallOption) (*GetCategoryByParentResponse, error) {
	client := NewGoodscategoryClient(m.cli.Conn())
	return client.GetCategoryByParent(ctx, in, opts...)
}

func (m *defaultGoodscategory) DeleteCategory(ctx context.Context, in *DeleteCategoryRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	client := NewGoodscategoryClient(m.cli.Conn())
	return client.DeleteCategory(ctx, in, opts...)
}
