// Code generated by goctl. DO NOT EDIT!
// Source: goodscategory.proto

package server

import (
	"context"

	"newbee-mall-gozero/service/goods_category/rpc/goodscategory"
	"newbee-mall-gozero/service/goods_category/rpc/internal/logic"
	"newbee-mall-gozero/service/goods_category/rpc/internal/svc"
)

type GoodscategoryServer struct {
	svcCtx *svc.ServiceContext
	goodscategory.UnimplementedGoodscategoryServer
}

func NewGoodscategoryServer(svcCtx *svc.ServiceContext) *GoodscategoryServer {
	return &GoodscategoryServer{
		svcCtx: svcCtx,
	}
}

func (s *GoodscategoryServer) AddCategory(ctx context.Context, in *goodscategory.AddCategoryRequest) (*goodscategory.EmptyResponse, error) {
	l := logic.NewAddCategoryLogic(ctx, s.svcCtx)
	return l.AddCategory(in)
}

func (s *GoodscategoryServer) UpdateCategory(ctx context.Context, in *goodscategory.UpdateCategoryRequest) (*goodscategory.EmptyResponse, error) {
	l := logic.NewUpdateCategoryLogic(ctx, s.svcCtx)
	return l.UpdateCategory(in)
}

func (s *GoodscategoryServer) GetCategory(ctx context.Context, in *goodscategory.GetCategoryRequest) (*goodscategory.GetCategoryResponse, error) {
	l := logic.NewGetCategoryLogic(ctx, s.svcCtx)
	return l.GetCategory(in)
}

func (s *GoodscategoryServer) GetCategoryList(ctx context.Context, in *goodscategory.GetCategoryListRequest) (*goodscategory.GetCategoryListResponse, error) {
	l := logic.NewGetCategoryListLogic(ctx, s.svcCtx)
	return l.GetCategoryList(in)
}

func (s *GoodscategoryServer) GetCategoryByParent(ctx context.Context, in *goodscategory.GetCategoryByParentRequest) (*goodscategory.GetCategoryByParentResponse, error) {
	l := logic.NewGetCategoryByParentLogic(ctx, s.svcCtx)
	return l.GetCategoryByParent(in)
}

func (s *GoodscategoryServer) DeleteCategory(ctx context.Context, in *goodscategory.DeleteCategoryRequest) (*goodscategory.EmptyResponse, error) {
	l := logic.NewDeleteCategoryLogic(ctx, s.svcCtx)
	return l.DeleteCategory(in)
}
