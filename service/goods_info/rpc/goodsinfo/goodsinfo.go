// Code generated by goctl. DO NOT EDIT!
// Source: goodsinfo.proto

package goodsinfo

import (
	"context"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Goodsinfo interface {
		//  普通用户
		GetGoodsDetail(ctx context.Context, in *GetGoodsDetailRequest, opts ...grpc.CallOption) (*GetGoodsDetailResponse, error)
		SearchGoods(ctx context.Context, in *SearchGoodsRequest, opts ...grpc.CallOption) (*SearchGoodsResponse, error)
		//  管理员
		AddGoodsInfo(ctx context.Context, in *AddGoodsInfoRequest, opts ...grpc.CallOption) (*AddGoodsInfoResponse, error)
		UpdateGoodsInfo(ctx context.Context, in *UpdateGoodsInfoRequest, opts ...grpc.CallOption) (*UpdateGoodsInfoResponse, error)
		AlterGoodsStatus(ctx context.Context, in *AlterGoodsStatusRequest, opts ...grpc.CallOption) (*AlterGoodsStatusResponse, error)
		DeleteGoodsInfo(ctx context.Context, in *DeleteGoodsInfoRequest, opts ...grpc.CallOption) (*DeleteGoodsInfoResponse, error)
		GetGoodsInfo(ctx context.Context, in *GetGoodsInfoRequest, opts ...grpc.CallOption) (*GetGoodsInfoResponse, error)
		GetGoodsList(ctx context.Context, in *GetGoodsListRequest, opts ...grpc.CallOption) (*GetGoodsListResponse, error)
	}

	defaultGoodsinfo struct {
		cli zrpc.Client
	}
)

func NewGoodsinfo(cli zrpc.Client) Goodsinfo {
	return &defaultGoodsinfo{
		cli: cli,
	}
}

//  普通用户
func (m *defaultGoodsinfo) GetGoodsDetail(ctx context.Context, in *GetGoodsDetailRequest, opts ...grpc.CallOption) (*GetGoodsDetailResponse, error) {
	client := NewGoodsinfoClient(m.cli.Conn())
	return client.GetGoodsDetail(ctx, in, opts...)
}

func (m *defaultGoodsinfo) SearchGoods(ctx context.Context, in *SearchGoodsRequest, opts ...grpc.CallOption) (*SearchGoodsResponse, error) {
	client := NewGoodsinfoClient(m.cli.Conn())
	return client.SearchGoods(ctx, in, opts...)
}

//  管理员
func (m *defaultGoodsinfo) AddGoodsInfo(ctx context.Context, in *AddGoodsInfoRequest, opts ...grpc.CallOption) (*AddGoodsInfoResponse, error) {
	client := NewGoodsinfoClient(m.cli.Conn())
	return client.AddGoodsInfo(ctx, in, opts...)
}

func (m *defaultGoodsinfo) UpdateGoodsInfo(ctx context.Context, in *UpdateGoodsInfoRequest, opts ...grpc.CallOption) (*UpdateGoodsInfoResponse, error) {
	client := NewGoodsinfoClient(m.cli.Conn())
	return client.UpdateGoodsInfo(ctx, in, opts...)
}

func (m *defaultGoodsinfo) AlterGoodsStatus(ctx context.Context, in *AlterGoodsStatusRequest, opts ...grpc.CallOption) (*AlterGoodsStatusResponse, error) {
	client := NewGoodsinfoClient(m.cli.Conn())
	return client.AlterGoodsStatus(ctx, in, opts...)
}

func (m *defaultGoodsinfo) DeleteGoodsInfo(ctx context.Context, in *DeleteGoodsInfoRequest, opts ...grpc.CallOption) (*DeleteGoodsInfoResponse, error) {
	client := NewGoodsinfoClient(m.cli.Conn())
	return client.DeleteGoodsInfo(ctx, in, opts...)
}

func (m *defaultGoodsinfo) GetGoodsInfo(ctx context.Context, in *GetGoodsInfoRequest, opts ...grpc.CallOption) (*GetGoodsInfoResponse, error) {
	client := NewGoodsinfoClient(m.cli.Conn())
	return client.GetGoodsInfo(ctx, in, opts...)
}

func (m *defaultGoodsinfo) GetGoodsList(ctx context.Context, in *GetGoodsListRequest, opts ...grpc.CallOption) (*GetGoodsListResponse, error) {
	client := NewGoodsinfoClient(m.cli.Conn())
	return client.GetGoodsList(ctx, in, opts...)
}
